/*
 * BuscaBombas.java
 *
 * Created on March 5, 2005, 4:23 PM 
 */
package codigo;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.StringTokenizer;
import lookAndFeel.cambiarInterfaz;
/**
 *
 * @author  jean carlos
 */
public class BuscaBombas  extends javax.swing.JFrame
{
    private MATRIZ[][] lista;/**esta es la clase que tiene la informacion*/
    private JPanel matriz;/**panel donde se ponen los cudros*/
    private String minas;/**cantidad de minas que el usuario desea*/
    private Matriz m;/**instanacia de la clase que hace la matriz*/
    private int tamano;/**tamano de la matriz*/
    private int juego;/**esta variable se encarga de ver cual juego se tiene que hacer*/
    private boolean usada=false;/**esta variable nos dice si ya esta usada o no*/
    private int cantidadBombas,cuantasBombas;/**esta variable cunta las minas que hay en el juego*/ 
    private int clic;/**esta variable funciona solo para que el usuario pueda obtener la opcion con el boton izquierdo*/
    private boolean perdio=false;/**esta variable indica si el usuario perdio el juego o no*/
    private Tiempo tiempoHilo;/**se hace una isntancia de la clase tiempo*/
    private guardarJuego guardarCargar = new guardarJuego();/**esta instancia se encarga de guardar o cargar un juego*/
    private static String informacion;/**esta variable se utiliza para guardar informacion y para cargar informacion*/
    private static String informacionAux;/**este es soporte de la informacion que tiene la matriz*/
    private static StringTokenizer separador;/**este metodo se encarga de separar todas las partes del juego*/
    private boolean prineraVez=true;/**para que el hilo no se llama si no esta funcionando*/
    private static ayuda Ayuda = new ayuda();/**esta variable abre la ventana de ayuda del usuario*/
    private cambiarInterfaz cambio;/**este metodo cambia el look de las pantallas*/
    
    /** Creates new form BuscaBombas */
    public BuscaBombas() {
        initComponents(); 
        matriz= new JPanel();  
        Personalizar.setSize(250,200);
         AUTOR.setSize(250,200);
         AUTOR.setResizable(false);
         jTextPane1.setText("Jean Carlos Estudiante de Informática.\n" +
         "Creador del Juego Busca Bombas\n"+"GRACIAS A DIOS \n"+
         "\n Programa Hecho en Java; Versión 1.5 2007");      
         jTextPane1.setEnabled(false);
        Tamano.setSize(25,20);
        Bombas.setSize(25,20);          
          encontradas.setText("");
          setIconImage(Toolkit.getDefaultToolkit().getImage("icono\\ico_bomba.gif"));  
          cambio =new cambiarInterfaz();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jMenuBar2 = new javax.swing.JMenuBar();
        Personalizar = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Tamano = new javax.swing.JTextField();
        Bombas = new javax.swing.JTextField();
        button1 = new java.awt.Button();
        AUTOR = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        gerald = new javax.swing.JPopupMenu();
        Marcela = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        Luis = new javax.swing.JMenuItem();
        carmen = new javax.swing.JMenuItem();
        Carlos = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        yoselin = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel3 = new javax.swing.JPanel();
        cuantasMinas = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        encontradas = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        GC = new javax.swing.JMenuItem();
        SAlir = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Principiante = new javax.swing.JMenuItem();
        Intermedio = new javax.swing.JMenuItem();
        Experto = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        autor = new javax.swing.JMenuItem();

        Personalizar.getContentPane().setLayout(null);

        Personalizar.setTitle("Personalizar Busca Bombas");
        Personalizar.setBackground(new java.awt.Color(219, 238, 199));
        Personalizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Personalizar.setModal(true);
        jPanel8.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(236, 244, 243));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setText("Tamano");
        jPanel8.add(jLabel2);
        jLabel2.setBounds(10, 10, 90, 20);

        jLabel3.setText("Bombas");
        jPanel8.add(jLabel3);
        jLabel3.setBounds(10, 40, 50, 14);

        Tamano.setToolTipText("Tamano Juego");
        Tamano.setOpaque(false);
        jPanel8.add(Tamano);
        Tamano.setBounds(80, 10, 6, 20);

        Bombas.setToolTipText("Cantidad Bombas");
        Bombas.setOpaque(false);
        jPanel8.add(Bombas);
        Bombas.setBounds(80, 40, 6, 20);

        Personalizar.getContentPane().add(jPanel8);
        jPanel8.setBounds(30, 30, 160, 70);

        button1.setLabel("OK");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        Personalizar.getContentPane().add(button1);
        button1.setBounds(90, 120, 33, 24);

        AUTOR.setModal(true);
        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel5.setFont(new java.awt.Font("Algerian", 3, 14));
        jLabel5.setForeground(new java.awt.Color(0, 51, 204));
        jLabel5.setText("Jean Carlos Rojas Ramirez");
        jLabel5.setToolTipText("Autor");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(jLabel5);

        AUTOR.getContentPane().add(jPanel10, java.awt.BorderLayout.NORTH);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextPane1.setFont(new java.awt.Font("Arial", 1, 12));
        jTextPane1.setForeground(new java.awt.Color(0, 204, 204));
        jScrollPane1.setViewportView(jTextPane1);

        jPanel11.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        AUTOR.getContentPane().add(jPanel11, java.awt.BorderLayout.CENTER);

        gerald.setBackground(new java.awt.Color(223, 246, 245));
        Marcela.setBackground(new java.awt.Color(223, 246, 245));
        Marcela.setFont(new java.awt.Font("Tahoma", 1, 11));
        Marcela.setText("Personalizar");
        Marcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarcelaActionPerformed(evt);
            }
        });

        gerald.add(Marcela);

        jMenu6.setBackground(new java.awt.Color(223, 246, 245));
        jMenu6.setText("Escoja juego");
        jMenu6.setFont(new java.awt.Font("Tahoma", 1, 11));
        Luis.setBackground(new java.awt.Color(223, 246, 245));
        Luis.setFont(new java.awt.Font("Tahoma", 1, 11));
        Luis.setText("Principiantes");
        Luis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LuisActionPerformed(evt);
            }
        });

        jMenu6.add(Luis);

        carmen.setBackground(new java.awt.Color(223, 246, 245));
        carmen.setFont(new java.awt.Font("Tahoma", 1, 11));
        carmen.setText("Intermedio");
        carmen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carmenActionPerformed(evt);
            }
        });

        jMenu6.add(carmen);

        Carlos.setBackground(new java.awt.Color(223, 246, 245));
        Carlos.setFont(new java.awt.Font("Tahoma", 1, 11));
        Carlos.setText("Experto");
        Carlos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarlosActionPerformed(evt);
            }
        });

        jMenu6.add(Carlos);

        gerald.add(jMenu6);

        gerald.add(jSeparator2);

        yoselin.setBackground(new java.awt.Color(223, 246, 245));
        yoselin.setFont(new java.awt.Font("Tahoma", 1, 11));
        yoselin.setText("Salir");
        yoselin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yoselinActionPerformed(evt);
            }
        });

        gerald.add(yoselin);

        setTitle("Busca Bombas 1.5");
        setIconImage(getIconImage());
        setName("Buscando");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setBackground(new java.awt.Color(204, 153, 255));
        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setToolTipText("Cuantas Bombas");
        cuantasMinas.setFont(new java.awt.Font("Arial Black", 2, 18));
        cuantasMinas.setForeground(new java.awt.Color(255, 51, 51));
        cuantasMinas.setText("Bombas");
        cuantasMinas.setToolTipText("Numero de Bombas");
        cuantasMinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cuantasMinasMousePressed(evt);
            }
        });

        jPanel3.add(cuantasMinas);

        jToolBar1.add(jPanel3);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setFont(new java.awt.Font("Algerian", 0, 18));
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Juego");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jPanel7.add(jLabel1);

        jToolBar1.add(jPanel7);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Agency FB", 3, 18));
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Tiempo");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jPanel9.add(jLabel4);

        jToolBar1.add(jPanel9);

        jPanel2.add(jToolBar1, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel4.setBackground(new java.awt.Color(227, 227, 251));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jPanel4, java.awt.BorderLayout.WEST);

        jPanel5.setBackground(new java.awt.Color(227, 227, 251));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jPanel5, java.awt.BorderLayout.EAST);

        jPanel6.setBackground(new java.awt.Color(227, 227, 251));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        encontradas.setText("jLabel6");
        jPanel6.add(encontradas);

        jPanel1.add(jPanel6, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 255));
        jMenu3.setBackground(new java.awt.Color(204, 204, 255));
        jMenu3.setText("Archivo");
        Abrir.setBackground(new java.awt.Color(204, 204, 255));
        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        jMenu3.add(Abrir);

        Guardar.setBackground(new java.awt.Color(204, 204, 255));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jMenu3.add(Guardar);

        jMenuItem2.setBackground(new java.awt.Color(204, 204, 255));
        jMenuItem2.setText("Ver todo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem2);

        jMenu3.add(jSeparator1);

        GC.setBackground(new java.awt.Color(204, 204, 255));
        GC.setText("GC");
        GC.setToolTipText("Garbage Colector");
        GC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCActionPerformed(evt);
            }
        });

        jMenu3.add(GC);

        SAlir.setBackground(new java.awt.Color(204, 204, 255));
        SAlir.setText("Salir...");
        SAlir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAlirActionPerformed(evt);
            }
        });

        jMenu3.add(SAlir);

        jMenuBar1.add(jMenu3);

        jMenu1.setBackground(new java.awt.Color(204, 204, 255));
        jMenu1.setMnemonic('n');
        jMenu1.setText("Nuevo juego");
        jMenuItem1.setBackground(new java.awt.Color(204, 204, 255));
        jMenuItem1.setMnemonic('c');
        jMenuItem1.setText("Personalizar");
        jMenuItem1.setToolTipText("Personalizar Juego");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenu2.setBackground(new java.awt.Color(204, 204, 255));
        jMenu2.setMnemonic('j');
        jMenu2.setText("Escoja Juego");
        Principiante.setBackground(new java.awt.Color(204, 204, 255));
        Principiante.setMnemonic('p');
        Principiante.setText("Principiante");
        Principiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrincipianteActionPerformed(evt);
            }
        });

        jMenu2.add(Principiante);

        Intermedio.setBackground(new java.awt.Color(204, 204, 255));
        Intermedio.setMnemonic('i');
        Intermedio.setText("Intermedio");
        Intermedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntermedioActionPerformed(evt);
            }
        });

        jMenu2.add(Intermedio);

        Experto.setBackground(new java.awt.Color(204, 204, 255));
        Experto.setMnemonic('e');
        Experto.setText("Experto");
        Experto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpertoActionPerformed(evt);
            }
        });

        jMenu2.add(Experto);

        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        jMenu7.setBackground(new java.awt.Color(204, 204, 255));
        jMenu7.setText("Look");
        jRadioButtonMenuItem1.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Java");
        jRadioButtonMenuItem1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItem1ItemStateChanged(evt);
            }
        });

        jMenu7.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(jRadioButtonMenuItem2);
        jRadioButtonMenuItem2.setText("Windows");
        jRadioButtonMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItem2ItemStateChanged(evt);
            }
        });

        jMenu7.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setText("Modif");
        jRadioButtonMenuItem3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItem3ItemStateChanged(evt);
            }
        });

        jMenu7.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(jRadioButtonMenuItem4);
        jRadioButtonMenuItem4.setText("GTK");
        jRadioButtonMenuItem4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItem4ItemStateChanged(evt);
            }
        });

        jMenu7.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setBackground(new java.awt.Color(204, 204, 255));
        buttonGroup1.add(jRadioButtonMenuItem5);
        jRadioButtonMenuItem5.setText("Mac");
        jRadioButtonMenuItem5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItem5ItemStateChanged(evt);
            }
        });

        jMenu7.add(jRadioButtonMenuItem5);

        jMenuBar1.add(jMenu7);

        jMenu4.setBackground(new java.awt.Color(204, 204, 255));
        jMenu4.setText("Ayuda");
        jMenuItem3.setBackground(new java.awt.Color(204, 204, 255));
        jMenuItem3.setText("Ayuda");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });

        jMenu4.add(jMenuItem3);

        jMenuBar1.add(jMenu4);

        jMenu5.setBackground(new java.awt.Color(204, 204, 255));
        jMenu5.setText("Sobre");
        autor.setBackground(new java.awt.Color(204, 204, 255));
        autor.setText("Autor");
        autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorActionPerformed(evt);
            }
        });

        jMenu5.add(autor);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonMenuItem5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem5ItemStateChanged
     cambio.MacLook(this);
    }//GEN-LAST:event_jRadioButtonMenuItem5ItemStateChanged

    private void jRadioButtonMenuItem4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ItemStateChanged
     cambio.GTKLook(this);        
    }//GEN-LAST:event_jRadioButtonMenuItem4ItemStateChanged

    private void jRadioButtonMenuItem3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ItemStateChanged
    cambio.MetalLook(this);
    }//GEN-LAST:event_jRadioButtonMenuItem3ItemStateChanged

    private void jRadioButtonMenuItem2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ItemStateChanged
      cambio.WindowsLook(this);
    }//GEN-LAST:event_jRadioButtonMenuItem2ItemStateChanged

    private void jRadioButtonMenuItem1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ItemStateChanged
       cambio.JavaLook(this);
    }//GEN-LAST:event_jRadioButtonMenuItem1ItemStateChanged

       /**este metodo abre el menu de ayuda*/
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
     Ayuda.show();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

 
    /**este metodo se encarga de activar el gc*/
    private void cuantasMinasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cuantasMinasMousePressed
        System.gc();
    }//GEN-LAST:event_cuantasMinasMousePressed

    /**este metodo se encarga de mostrar la hora actual*/
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
     if(evt.getButton()==3){
      jLabel4.setText(guardarCargar.horaActual());
      this.pack();
     }
    }//GEN-LAST:event_jLabel4MouseClicked

    /**este metodo se encarga de salir del programa*/
    private void yoselinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yoselinActionPerformed
      System.exit(0);
    }//GEN-LAST:event_yoselinActionPerformed

    /**este hace la matris para los principaintes*/
    private void LuisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LuisActionPerformed
        principiantes();
        tiempoHilo = new Tiempo();
       tiempoHilo.start();
    }//GEN-LAST:event_LuisActionPerformed

    /**este metodo se encaraga de hacer la matriz de intermedio*/
    private void carmenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carmenActionPerformed
     intermedio();
     tiempoHilo = new Tiempo();
       tiempoHilo.start();
    }//GEN-LAST:event_carmenActionPerformed

    /**este metodo abre la  opcion de experto*/
    private void CarlosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarlosActionPerformed
        hacerExperto();
        tiempoHilo = new Tiempo();
       tiempoHilo.start();
    }//GEN-LAST:event_CarlosActionPerformed

    /**abre el metodo para personalizar la matriz*/
    private void MarcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarcelaActionPerformed
       Personalizar.setVisible(true);
    }//GEN-LAST:event_MarcelaActionPerformed

    /**este metodo abre el popmenu para poder tener mas opciones*/
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if(evt.getButton()==3)
       gerald.show(jLabel1,evt.getX(),evt.getY());
        else if(evt.getButton()==1)
        {
             encontradas.setText("");
             if(prineraVez==false)
            if(tiempoHilo.isAlive()==true)
                tiempoHilo.stop();
                
            perdio=false;
            jLabel1.setText("Juego");            
               if(juego==1)
                 hacerExperto();
               else if(juego==3)
                   principiantes(); 
               else if(juego==2)
                    intermedio();
               else if(juego==4)
                 personalizarMatriz();
            try{
            if(lista.length!=0){
            tiempoHilo = new Tiempo();
            tiempoHilo.start(); }          
            }
            catch(NullPointerException e)
            {
                JOptionPane.showMessageDialog(null,"Posiblemente no hay valores en la matriz "+e,"Sin valores",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    /**este se encarga de abrir algun juego guardado*/
    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
     //  JOptionPane.showMessageDialog(null,""+guardarCargar.verJuego());
       armarJuego();
    }//GEN-LAST:event_AbrirActionPerformed

/**este metodo se encarga de armar un juego guardado*/
private void armarJuego()
{
     if(usada==true)
       matriz.removeAll();
   else
       usada=true;
     
    try{
         if(prineraVez==false)
            if(tiempoHilo.isAlive()==true)
                tiempoHilo.stop();
       
        informacion="";
        informacion=guardarCargar.verJuego();        
        separador = new StringTokenizer(informacion,"@");        
        informacionAux=separador.nextToken();
        juego=Integer.parseInt(informacionAux);
        informacionAux=separador.nextToken();
        if(informacionAux.trim().equals("true"))
            perdio=true;
        else if(informacionAux.trim().equals("false"))
          perdio=false;
        
        tamano=Integer.parseInt(separador.nextToken().trim());
        cuantasBombas=Integer.parseInt(separador.nextToken().trim());
         tiempoHilo = new Tiempo();
        tiempoHilo.tiempo=Integer.parseInt(separador.nextToken().trim());
        tiempoHilo.start();
        jLabel4.setText(Integer.toString(tiempoHilo.tiempo));
        cantidadBombas=Integer.parseInt(separador.nextToken().trim());
        cuantasMinas.setText(separador.nextToken().trim());
        informacionAux="";
        informacionAux=separador.nextToken();
        hacerMatriz(informacionAux);
        ponerBombas();
        JOptionPane.showMessageDialog(null,"Fue Guardado a las: "+separador.nextToken()+" El Dia: "+separador.nextToken());
        prineraVez=false;
    } 
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(null,"Ocurrio un problema en la utilizacion del archivo "+e,"Error",JOptionPane.ERROR_MESSAGE);
    }
    
}

/**este metodo se encaraga de hacer la matriz con la informacion guardar*/
 private void hacerMatriz(String cadena)
 {
     String nu="";
     lista=new MATRIZ[tamano][tamano];
     matriz.setLayout(new GridLayout(tamano,tamano));          
     inicializarMatriz();
     StringTokenizer separador1 = new StringTokenizer(cadena,"?");
     while(separador1.hasMoreTokens())//este metodo busca cada bloque de informacion de cada matriz
     {
         //System.out.println(separador.nextToken());
         int x,y;
         StringTokenizer separador2 = new StringTokenizer(separador1.nextToken(),";");
         while(separador2.hasMoreTokens())//este ve cada informacion en especifico
         {
             x=Integer.parseInt(separador2.nextToken().trim());
             y=Integer.parseInt(separador2.nextToken().trim());
             nu=separador2.nextToken();
               if(nu.equals("1"))
                     lista[x][y].MAtriz.setForeground(new java.awt.Color(0, 0, 204));
                    else if(nu.equals("2"))
                     lista[x][y].MAtriz.setForeground(new java.awt.Color(255, 51, 51));
                    else if(nu.equals("3"))
                     lista[x][y].MAtriz.setForeground(new java.awt.Color(0,255,51));
                    else if(nu.equals("4"))
                          lista[x][y].MAtriz.setForeground(new java.awt.Color(0,19,245));
                     else if(nu.equals("5"))
                          lista[x][y].MAtriz.setForeground(new java.awt.Color(153,0,153));
                    else if(nu.equals("6"))
                          lista[x][y].MAtriz.setForeground(new java.awt.Color(153,255,204));
                    else if(nu.equals("7"))
                          lista[x][y].MAtriz.setForeground(new java.awt.Color(255,102,255));
                    else if(nu.equals("8"))
                         lista[x][y].MAtriz.setForeground(new java.awt.Color(204,204,0));
                    else
                      lista[x][y].MAtriz.setForeground(new java.awt.Color(0,51,153));       
            lista[x][y].MAtriz.setText(nu); 
            lista[x][y].numeros=Integer.parseInt(separador2.nextToken().trim()); 
         }
     }
    jPanel1.add(matriz, java.awt.BorderLayout.CENTER);   
    llenarMatris();
    this.pack();
 }
 
/**este metodo es para salir del programa*/
    private void SAlirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAlirActionPerformed
    System.exit(0);
    }//GEN-LAST:event_SAlirActionPerformed

/**este boton se encarga de guardar el juego de la persona*/
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed

   try{
          if(lista.length>0)
           {
               int t=tiempoHilo.tiempo;
               tiempoHilo.stop();
               informacion="";
               /**********************************************************************************************
                * numero juego@ perdio @ tamano @ cuantas bombas hay en la matriz @ tiempo que lleva el juego @ bombas que quedan @ *
                * cuantas bombas quedan segun usuario*/
               clic=Integer.parseInt(jLabel4.getText().trim());//se obtiene el tiempo
               informacion+=Integer.toString(juego)+"@"+perdio+"@"+Integer.toString(tamano)+"@"+Integer.toString(cuantasBombas)+"@"+Integer.toString(clic)+"@"
               +Integer.toString(cantidadBombas)+"@"+cuantasMinas.getText().trim()+"@"+capturarMatriz();
               guardarCargar.guardarJuego(informacion);
               tiempoHilo =  new Tiempo();
               tiempoHilo.tiempo=t;
               tiempoHilo.start();
           }
   }
   catch(NullPointerException e)
   {
       JOptionPane.showMessageDialog(null,"No hay matriz para guardar "+e,"Sin matriz",JOptionPane.ERROR_MESSAGE);
   }
    }//GEN-LAST:event_GuardarActionPerformed

/**este metodo se encarga de guardar los valores de la matriz*/
private String capturarMatriz()
{   
    try{
    informacionAux="";
    for(int i=0;i<tamano;i++)
    {
        for(int j=0;j<tamano;j++)
        {
            /*se guarda= posicion1 ; posicion2 ; que tiene el label ; el numero de esa posicion*/
            informacionAux+=Integer.toString(i)+";"+Integer.toString(j)+";"+lista[i][j].MAtriz.getText()+";"
            +Integer.toString(lista[i][j].numeros)+"?";
        }
    }
    }
    catch(NullPointerException e)
    {
        JOptionPane.showMessageDialog(null,"Posiblemente no hay matriz "+e,"Error",JOptionPane.ERROR_MESSAGE);
    }
    
    return informacionAux;
}

/**este metodo se encarga de poner las bombas en los lugares que exite*/
private void ponerBombas()
{
    if(perdio==true)
    {
        for(int i=0;i<tamano;i++)
        {
            for(int j=0;j<tamano;j++)
            {
                if(lista[i][j].numeros==-1)
                 lista[i][j].MAtriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotosBusaca/ico_bomba.gif")));  
            }
        }
    }
}

/**este boton pone a funcionar la garbage colecto de java*/
    private void GCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCActionPerformed
System.gc();
    }//GEN-LAST:event_GCActionPerformed

    /**muestra todas las minas del jugador*/
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        mostrarTodas();//ver todas las minas
        jLabel1.setText("Perdio");
        perdio=true;
        this.pack();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**este metodo abre la ventana del autor*/
    private void autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorActionPerformed
   AUTOR.setVisible(true);
    }//GEN-LAST:event_autorActionPerformed

    /**este metodo controla la creacion de un nuevo juego*/
    /**crea la personalizacion*/
    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
   personalizarMatriz();         
        prineraVez=false;
    }//GEN-LAST:event_button1ActionPerformed

    /**este metodo abre el dialog que se puede personalizar el tamano*/
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Personalizar.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**este metodo se encarga de hacer el experto*/
    private void hacerExperto()
    {
        jLabel1.setText("Juego");
        
        if(prineraVez==false)
            if(tiempoHilo.isAlive()==true)
                tiempoHilo.stop();
        
        perdio=false;        
        if(usada==true)
       matriz.removeAll();
   else
       usada=true;
   
    tamano=25;
    cantidadBombas=99;
    cuantasBombas=99;
    m = new Matriz(tamano,cantidadBombas);
       lista=new MATRIZ[tamano][tamano];
       matriz.setLayout(new GridLayout(tamano,tamano));
        jPanel1.add(matriz, java.awt.BorderLayout.CENTER);    
      inicializarMatriz();
        llenarMatriz();
        llenarMatris();
        cuantasMinas.setText("99");         
        this.pack();
        juego=1;
        this.getMaximumSize();
    }
    
    /**este hace la matriz para expertos*/
    private void ExpertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpertoActionPerformed
          hacerExperto();  
          tiempoHilo = new Tiempo();
       tiempoHilo.start();
        prineraVez=false;
    }//GEN-LAST:event_ExpertoActionPerformed

    /**este metodo crea el intermedio*/
    private void intermedio()
    {
        jLabel1.setText("Juego");
       perdio=false;
       if(prineraVez==false)
         if(tiempoHilo.isAlive())
          tiempoHilo.stop();
         if(usada==true)
             
       matriz.removeAll();
   else
       usada=true;
   
     tamano=16;
     cantidadBombas=40;
    cuantasBombas=40;
     juego=2;     
    m = new Matriz(tamano,cantidadBombas);
       lista=new MATRIZ[tamano][tamano];
       matriz.setLayout(new GridLayout(tamano,tamano));
        jPanel1.add(matriz, java.awt.BorderLayout.CENTER);    
      inicializarMatriz();
        llenarMatriz();
        llenarMatris();
        cuantasMinas.setText("40");       
        this.pack();
    }
    
    /**este metodo hace la matriz para la de intermedios*/
    private void IntermedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntermedioActionPerformed
           intermedio();  
       tiempoHilo = new Tiempo();
       tiempoHilo.start();
        prineraVez=false;
    }//GEN-LAST:event_IntermedioActionPerformed

    private void principiantes()
    {
        jLabel1.setText("Juego");
         if(prineraVez==false)
            if(tiempoHilo.isAlive()==true)
                tiempoHilo.stop();
        
         perdio=false;        
         if(usada==true)
       matriz.removeAll();
   else
       usada=true;
   
        tamano=8;
        cantidadBombas=10;
        cuantasBombas=10;
        juego=3;
    m = new Matriz(tamano,cantidadBombas);
     lista=new MATRIZ[tamano][tamano];
       matriz.setLayout(new GridLayout(tamano,tamano));
        jPanel1.add(matriz, java.awt.BorderLayout.CENTER);    
      inicializarMatriz();
        llenarMatriz();
        llenarMatris();
        cuantasMinas.setText("10");       
        this.pack();    
    }
    
    /**hace la matriz de la persona que es principeantes*/
    private void PrincipianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrincipianteActionPerformed
       principiantes();
       tiempoHilo = new Tiempo();
       tiempoHilo.start();
       prineraVez=false;
    }//GEN-LAST:event_PrincipianteActionPerformed
    
    /**este metodo se encraga de inicializar toda la matriz de Labels*/
    private void inicializarMatriz()
    {
       
        for(int i=0; i<tamano;i++)
        {
            for(int j=0; j<tamano;j++)
            {
                lista[i][j]=new MATRIZ();
                //MAtriz[i][j].setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
        }
      
    }
    
    /**este metodo se encarga de llenar las matriz de Labels en el panel*/
    private void llenarMatris()
    {
        for(int i=0;i<tamano;i++)
        {
            for(int j=0;j<tamano;j++)
            {
                matriz.add(lista[i][j].MAtriz);
            }
        }
    }
    
    /**este metodo se encarga de llenar toda la matriz de labels*/
    private void llenarMatriz()
    {
        try{
        for(int i=0;i<tamano;i++)
            
        {
            for(int j=0;j<tamano;j++)
            {
              lista[i][j].numeros=m.MAtriz[i][j];           
            }
        }
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null,"error "+e);
        }
    }
    
    /**este metodo se encarga de personalizar la partida del jugador*/
    private void personalizarMatriz()
    {
         try{             
          if(prineraVez==false)
         if(tiempoHilo.isAlive())
          tiempoHilo.stop();
          
        if(usada==true)
       matriz.removeAll();
   else
       usada=true;
       
        juego=4;
        perdio=false;
            
             tamano=Integer.parseInt(Tamano.getText().trim());
             cantidadBombas=Integer.parseInt(Bombas.getText().trim());    
             cuantasBombas=cantidadBombas;
             if(cantidadBombas==0||cantidadBombas>(tamano*tamano))
             {
                if(cantidadBombas==0)
                cantidadBombas=1;
                else if(cantidadBombas>(tamano*tamano))
                    cantidadBombas=(tamano*tamano)/2;
                    
             }           
             if(tamano<2)
                 tamano=2;
       
        m = new Matriz(tamano,cantidadBombas);
     lista=new MATRIZ[tamano][tamano];
       matriz.setLayout(new GridLayout(tamano,tamano));    
        jPanel1.add(matriz, java.awt.BorderLayout.CENTER);    
      inicializarMatriz();
        llenarMatriz();
        llenarMatris();
        cuantasMinas.setText(Integer.toString(cantidadBombas));   
         Personalizar.dispose();
        this.pack();
        jLabel1.setText("Juego");
        tiempoHilo = new Tiempo();
       tiempoHilo.start();
          }
        catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,"No se puede inicializa la matriz "+e);  
           Personalizar.setVisible(true);          
        }   
         
         
    }
    
    /**este metodo determina si el usuario gana el juego*/
    private boolean gano()
    {
        int numero=Integer.parseInt(cuantasMinas.getText().trim());
        return((cantidadBombas==0)&&(numero>=0));
    }
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        new BuscaBombas().show();       
    }//*/
    
    /**este metodo hagranda la matriz si es necesario*/
    private void aumantar()
    {
        this.pack();
    }
      
    
    /**este metodo se encarga de mostrar todas las minas*/
    private void mostrarMinas()
    {
        for(int i=0;i<tamano;i++)
        {
            for(int j=0;j<tamano;j++)
            {
                if(lista[i][j].numeros==-1)
                lista[i][j].MAtriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotosBusaca/ico_bomba.gif")));
                else if(lista[i][j].MAtriz.getText().trim().equalsIgnoreCase("B"))
                lista[i][j].MAtriz.setText("X");    
            }
        }
    }
    
    /**este metodo se encaraga de mostrar todas las minas y numeros*/
    private void mostrarTodas()
    {
        for(int i=0;i<tamano;i++)
        {
            for(int j=0;j<tamano;j++)
            {                
                lista[i][j].mostrar();
            }
        }
    }
    
     ////////////////////////////////////////////////  
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog AUTOR;
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JTextField Bombas;
    private javax.swing.JMenuItem Carlos;
    private javax.swing.JMenuItem Experto;
    private javax.swing.JMenuItem GC;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem Intermedio;
    private javax.swing.JMenuItem Luis;
    private javax.swing.JMenuItem Marcela;
    private javax.swing.JDialog Personalizar;
    private javax.swing.JMenuItem Principiante;
    private javax.swing.JMenuItem SAlir;
    private javax.swing.JTextField Tamano;
    private javax.swing.JMenuItem autor;
    private java.awt.Button button1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem carmen;
    private javax.swing.JLabel cuantasMinas;
    private javax.swing.JLabel encontradas;
    private javax.swing.JPopupMenu gerald;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem yoselin;
    // End of variables declaration//GEN-END:variables

    /**esta clase se encarga de hacer la matriz */
    private class MATRIZ implements MouseListener, MouseMotionListener, ActionListener
    {
        private JLabel MAtriz;/**Labels con la matriz*/
        private int posicion;/**este tiene el numero del cuadro*/
        private int numeros;/**esta variable guarda el numero de ese campo*/
        private int bombas;/*cuenta las bombas**/
        private int clic;/**este metodo controla en clic del mouse*/
        private boolean clicDerecho=false;/**esta variable verifica que no este presionado B*/
        MATRIZ()
        {
            MAtriz = new JLabel("   ");
            MAtriz.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            MAtriz.addMouseListener(this);           
        }
        
        /**este metodo muestra el valor que tiene las minas*/
        private void mostrar()
        {
            if(numeros!=-1){
            if(numeros==1)
                    MAtriz.setForeground(new java.awt.Color(0, 0, 204));
                    else if(numeros==2)
                    MAtriz.setForeground(new java.awt.Color(255, 51, 51));
                    else if(numeros ==3)
                    MAtriz.setForeground(new java.awt.Color(0,255,51));
                    else if(numeros==4)
                         MAtriz.setForeground(new java.awt.Color(0,204,204));
                     else if(numeros==5)
                         MAtriz.setForeground(new java.awt.Color(153,0,153));
                    else if(numeros==6)
                         MAtriz.setForeground(new java.awt.Color(153,255,204));
                    else if(numeros==7)
                         MAtriz.setForeground(new java.awt.Color(255,102,255));
                    else if(numeros==8)
                         MAtriz.setForeground(new java.awt.Color(204,204,0));
                    else
                     MAtriz.setForeground(new java.awt.Color(0,51,153));            
            MAtriz.setText(Integer.toString(numeros));
            }
            else
             MAtriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotosBusaca/ico_bomba.gif")));
        }
        
        public void actionPerformed(ActionEvent e) {
        }
        
        public void mouseClicked(MouseEvent e) {
        }
        
        public void mouseDragged(MouseEvent e) {
        }
        
        public void mouseEntered(MouseEvent e) {
        }
        
        public void mouseExited(MouseEvent e) {
        }
        
        public void mouseMoved(MouseEvent e) {
        }
        
        public void mousePressed(MouseEvent e) {
            clic = e.getButton();
            if(MAtriz.getText().trim().equalsIgnoreCase("B"))
            clicDerecho=true;
            
            if(clic==1&&perdio==false&&clicDerecho==false)
            {
                if(numeros!=-1)
                {
                    if(numeros==1)
                    MAtriz.setForeground(new java.awt.Color(0, 0, 204));
                    else if(numeros==2)
                    MAtriz.setForeground(new java.awt.Color(255, 51, 51));
                    else if(numeros ==3)
                    MAtriz.setForeground(new java.awt.Color(0,255,51));
                    else if(numeros==4)
                         MAtriz.setForeground(new java.awt.Color(0,204,204));
                     else if(numeros==5)
                         MAtriz.setForeground(new java.awt.Color(153,0,153));
                    else if(numeros==6)
                         MAtriz.setForeground(new java.awt.Color(153,255,204));
                    else if(numeros==7)
                         MAtriz.setForeground(new java.awt.Color(255,102,255));
                    else if(numeros==8)
                         MAtriz.setForeground(new java.awt.Color(204,204,0));
                    else
                     MAtriz.setForeground(new java.awt.Color(0,51,153));
                    
                    MAtriz.setText(Integer.toString(numeros));                
                    //aumantar();
                }
                else
                {
                    perdio=true;
                    jLabel1.setText("perdió"); 
                    MAtriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotosBusaca/ico_bomba.gif")));
                    mostrarMinas(); 
                   tiempoHilo.stop();                 
                   encontradas.setText("Bombas Encontradas: "+(cantidadBombas-cuantasBombas)+" Faltaron: "+cantidadBombas);
                }
                if(gano())
                {
                    jLabel1.setText("GANO");
                    perdio=true;//para que todas las opciones queden inabilitadas
                }
            }
            
            else if(clic==3&&perdio==false)//el clic derecho
            {
                if(MAtriz.getText().trim().equalsIgnoreCase("B"))
                clicDerecho=true;
                
                if(MAtriz.getText().trim().equalsIgnoreCase("B"))
                {
                     MAtriz.setText("  ");//se quita la b que el usuario desea borrar
                     clicDerecho=false;
                    bombas=Integer.parseInt(cuantasMinas.getText().trim());
                    cuantasMinas.setText(Integer.toString(bombas+1));
                }
                else{
                MAtriz.setText("B");//donde el usuario cree que hay una mina se pone B
                clicDerecho=true;
                bombas=Integer.parseInt(cuantasMinas.getText().trim());
                cuantasMinas.setText(Integer.toString(bombas-1));
                if(numeros==-1)//este metodo nos resta las bombas que verdaderamente hemos encontrado
                {
                    cantidadBombas--;
                     if(gano()){
                        jLabel1.setText("GANO");
                        perdio=true;//para que todas las opciones queden inabilitadas
                    }
                }   
              }
            }
        }
        
        public void mouseReleased(MouseEvent e) {
        }
        
    }
    
    /**esta clase se encarga de controlar el tiempo*/
    private class Tiempo extends Thread
    {
        public int tiempo;/**esta variable se encarga de sumar el tiempo del usuario*/
        
       public void sumaTiempo()//controla el tiempo del juego
       {
           while(perdio!=true)//si el usuario pierde se termina el timpo
           {
               try{
               jLabel4.setText(Integer.toString(tiempo));    
               tiempo++;
               sleep((int)1000);
               }
               catch(InterruptedException e)
               {
                   JOptionPane.showMessageDialog(null,"El hilo se murio "+e);
               }
           }
       }
       
        public void run()//inicializa el timpo
        {
            try{
            sumaTiempo();
            sleep((int)1000);
            }
            catch(InterruptedException e)
            {
                JOptionPane.showMessageDialog(null,"El hilo se murio "+e);
            }
        }
    }
        
}
