/*
 * ayuda.java
 *
 * Created on May 1, 2005, 12:43 PM
 */
package codigo;
import javax.swing.JOptionPane;
import java.awt.event.*;
import java.awt.*;
/**
 *
 * @author  jean carlos
 */

public class ayuda extends javax.swing.JFrame {
    
    private String[][] Informacion=new String[13][2];/**este matriz tiene la informacion de la ayuda del juego*/
   // private Label[] titulo= new Label[13];/**estos labels mustran los titulos de la informacion*/
   private int opcion;/**tiene la informacion de cual fue el titulo que se pidio*/
   private String[][] significados= new String[3][2];/**esta matriz tiene la informacion de los diferentes significados*/
    
    /** Creates new form ayuda */
    public ayuda() {
        initComponents();
        inicializarMatriz();
        incializar();
        inicializarMatrizSignificados();
        llenarListasignificados();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new java.awt.List();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list2 = new java.awt.List();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setTitle("Ayuda Busca Bombas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.GridLayout(2, 0));

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel6.setBorder(new javax.swing.border.EtchedBorder());
        list1.setBackground(new java.awt.Color(204, 204, 204));
        list1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                list1ItemStateChanged(evt);
            }
        });

        jScrollPane1.setViewportView(list1);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Titulos De Busqueda");
        jPanel9.add(jLabel1);

        jPanel6.add(jPanel9, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel6);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(new javax.swing.border.EtchedBorder());
        jPanel7.setLayout(new java.awt.BorderLayout());

        list2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                list2ItemStateChanged(evt);
            }
        });

        jScrollPane3.setViewportView(list2);

        jPanel7.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel7, java.awt.BorderLayout.CENTER);

        jLabel2.setText("Definiciones");
        jPanel8.add(jLabel2);

        jPanel4.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel4);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jTextPane1.setFont(new java.awt.Font("Arial", 1, 12));
        jTextPane1.setForeground(new java.awt.Color(51, 204, 255));
        jScrollPane2.setViewportView(jTextPane1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }//GEN-END:initComponents

    /**este metodo hace que se visualiza la informacion de los significados*/
    private void list2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_list2ItemStateChanged
jTextPane1.setFont(new java.awt.Font("Arial", 1, 12));
        jTextPane1.setForeground(new java.awt.Color(51,204,255));
        opcion = list2.getSelectedIndex();
       jTextPane1.setText(significados[opcion][1]);
    }//GEN-LAST:event_list2ItemStateChanged

    /**este metodo controla a la lista del programa*/
    private void list1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_list1ItemStateChanged
jTextPane1.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
jTextPane1.setForeground(new java.awt.Color(102, 102, 255));
opcion = list1.getSelectedIndex();
jTextPane1.setText(Informacion[opcion][1]);
    }//GEN-LAST:event_list1ItemStateChanged
    
    /**inicializa la matriz con los significados de todo el juego*/
    private void inicializarMatrizSignificados()
    {
        significados[0][0]="B";
        significados[0][1]="Las B es para indicar que se encuentra una bomba en ese espacio";
        significados[1][0]="X";
        significados[1][1]="Representa un error del usuario. Es donde el usuario presiona B y en realidad no existía una bomba en ese espacio.";
        significados[2][0]="Bomba B";
        significados[2][1]="Es que el usuario escogió bien el espacio de bomba y en ese lugar había una bomba de  verdad.";
    }
    
    /**Este metodo se encarga de llenar la lista 2*/
    private void llenarListasignificados()
    {
        for(int i=0; i<significados.length; i++)
        list2.add(significados[i][0]);
    }
    
    /**este metodo inicializa la matriz de la informacion para poder visualizarla*/
    private void inicializarMatriz()
    {
        Informacion[0][0]="Guardar archivos";
        Informacion[0][1]="Se tiene que ir al menú archivo. Luego el botón guardar. Por ultimo aparece un dialog que nos da la ruta en la que desea guardar el archivo. Se Tiene que escribir el nombre del archivo en la parte en blanco. Sin extensión.";
        Informacion[1][0]="Abrir archivos";
        Informacion[1][1]="Para cargar un archivo .jbb se tiene que ir al menú archivo y luego al botón abrir buscar la ruta con el dialog y finalmente darle aceptar.";
        Informacion[2][0]="Ver todo";
        Informacion[2][1]="se tiene ir a archivo y presionar el botón ver todo. Para poder ver la informacion del juego";
        Informacion[3][0]="GC";
        Informacion[3][1]="este activa la garbage collector de java para que limpie la memoria que no esta utilizando.";
        Informacion[4][0]="Sobre";
        Informacion[4][1]="la información del programa.";
        Informacion[5][0]="Nuevo Juego";
        Informacion[5][1]="Tiene las opciones para todas las formas diferentes del juego.";
        Informacion[6][0]="Personalizar";
        Informacion[6][1]="este nos ayuda a crear nuestra matriz y además ponerle el número de bombas que nosotros deseamos en nuestro juego.";
        Informacion[7][0]="Principiantes";
        Informacion[7][1]="Este hace el nivel más fácil del juego busca bombas";
        Informacion[8][0]="Intermedio";
        Informacion[8][1]="Este hace el nivel medio del juego busca bombas.";
        Informacion[9][0]="Experto";
        Informacion[9][1]="Este hace el nivel mas elevado del juego busca bombas";
        Informacion[10][0]="El Panel Juego";
        Informacion[10][1]="Este se encarga de iniciar juegos dependiendo de cual es el nivel que usted selecciono. Además con el clic derecho usted tiene un menú de opciones para poder cambiar los juegos. Estos botones del menú de ayuda de panel juego son iguales al menú de juego de Nuevo Juego.";
        Informacion[11][0]="Tiempo";
        Informacion[11][1]="Este panel nos da el tiempo de juego que usted lleva en el mismo. Además si usted desea ver la hora dando un clic derecho sobre el panel del tiempo puede ver la hora.";
        Informacion[12][0]="Salir";
        Informacion[12][1]="usted puede salir con el menú archivo y luego el botón salir, además desde el panel del juego donde nos da la opción de salir con el clic derecho. O con la x del panel superior.";
    }
    
    /**este metodo se encarga de llenar los labels con la informacion de los titulos*/
    private void incializar()
    {
         for(int i=0; i<13; i++)   
         {
              list1.add(Informacion[i][0]);   
         }
         
    }
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.dispose();
    }//GEN-LAST:event_exitForm
    
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    private java.awt.List list1;
    private java.awt.List list2;
    // End of variables declaration//GEN-END:variables
    
}
